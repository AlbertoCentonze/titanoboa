(()=>{const o=(t,e)=>{const{ethereum:n}=window;if(!n){throw new Error("No Ethereum plugin found. Please authorize the site on your browser wallet.")}return n.request({method:t,params:e})};const i=t=>JSON.stringify(t,(t,e)=>typeof e==="bigint"?e.toString():e);const c=t=>document.cookie.match(`\\b${t}=([^;]*)\\b`)?.[1];const r=t=>t.then(t=>({data:t})).catch(t=>({error:Object.keys(t).length?t:{message:t.message,stack:t.stack}}));const a=e=>new Promise(t=>setTimeout(t,e));const w=window.colab??window.google?.colab;async function l(t,e){const n={["X-XSRFToken"]:c("_xsrf")};const o={method:"POST",body:e,headers:n};const a=`../titanoboa_jupyterlab/callback/${t}`;const s=await fetch(a,o);return s.text()}let s;const t=async t=>{const e=await o("eth_requestAccounts");s=e.includes(t)?t:e[0];return s};const e=async t=>({hash:await o("eth_sendTransaction",[t])});const n=(t,e,n)=>o("eth_signTypedData_v4",[s,JSON.stringify({domain:t,types:e,value:n})]);const u=(t,e)=>o(t,e);const h=async(t,e,n)=>{while(true){try{const o=await u("eth_getTransactionReceipt",[t]);if(o){return o}}catch(t){if((t?.info||t)?.error?.code!==-32603){throw t}}if(e<n){throw new Error("Timeout waiting for transaction receipt")}await a(n);e-=n}};const d=t=>t.reduce(async(t,[e,n])=>[...await t,await u(e,n)],[]);const y=c=>async(t,...e)=>{const n=Date.now();if(!w){const s=await fetch(`../titanoboa_jupyterlab/callback/${t}`);if(!s.ok)return}const o=i(await r(c(...e)));const a=Date.now()-n;console.log(`Boa (${a}ms): ${c.name}(${e.map(t=>JSON.stringify(t)).join(",")}) = ${o};`);if(w){return o}await l(t,o)};window._titanoboa={loadSigner:y(t),sendTransaction:y(e),signTypedData:y(n),waitForTransactionReceipt:y(h),rpc:y(u),multiRpc:y(d)};if(element)element.style.display="none"})();
